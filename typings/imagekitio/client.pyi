"""
This type stub file was generated by pyright.
"""

from typing import Any, Dict

class ImageKit:
    """
    Main Class What user will use by creating
    instance
    """
    def __init__(self, public_key=..., private_key=..., url_endpoint=..., transformation_position=..., options=...) -> None:
        ...
    
    def upload(self, file=..., file_name=..., options=...) -> Dict[str, Any]:
        """Provides upload functionality
        """
        ...
    
    def upload_file(self, file=..., file_name=..., options=...) -> Dict[str, Any]:
        """Provides upload functionality
        """
        ...
    
    def list_files(self, options: Dict) -> Dict:
        """Get list(filtered if given param) of images of client
        """
        ...
    
    def get_file_details(self, file_identifier: str = ...) -> Dict:
        """Get file_detail by file_id or file_url
        """
        ...
    
    def update_file_details(self, file_id: str, options: dict = ...) -> Dict:
        """Update file detail by file id and options
        """
        ...
    
    def delete_file(self, file_id: str = ...) -> Dict[str, Any]:
        """Delete file by file_id
        """
        ...
    
    def bulk_delete(self, file_ids: list = ...): # -> dict[str, Unknown | None]:
        """Delete files in bulk by provided list of ids
        """
        ...
    
    def bulk_file_delete(self, file_ids: list = ...): # -> dict[str, Unknown | None]:
        """Delete files in bulk by provided list of ids
        """
        ...
    
    def purge_cache(self, file_url: str = ...) -> Dict[str, Any]:
        """Purge Cache from server by file url
        """
        ...
    
    def purge_file_cache(self, file_url: str = ...) -> Dict[str, Any]:
        """Purge Cache from server by file url
        """
        ...
    
    def get_purge_cache_status(self, purge_cache_id: str = ...) -> Dict[str, Any]:
        """Get Purge Cache status by purge cache request_id
        """
        ...
    
    def get_purge_file_cache_status(self, purge_cache_id: str = ...) -> Dict[str, Any]:
        """Get Purge Cache status by purge cache request_id
        """
        ...
    
    def get_metadata(self, file_id: str = ...) -> Dict[str, Any]:
        """Get Meta Data of a file by file id
        """
        ...
    
    def get_file_metadata(self, file_id: str = ...) -> Dict[str, Any]:
        """Get Meta Data of a file by file id
        """
        ...
    
    def get_remote_url_metadata(self, remote_file_url: str = ...): # -> dict[str, Unknown | None]:
        ...
    
    def get_remote_file_url_metadata(self, remote_file_url: str = ...): # -> dict[str, Unknown | None]:
        ...
    
    def url(self, options: Dict[str, Any]) -> str:
        """Get generated Url from options parameter
        """
        ...
    
    @staticmethod
    def phash_distance(first, second): # -> int:
        """Get hamming distance between two phash(to check similarity)
        """
        ...
    
    def get_authentication_parameters(self, token=..., expire=...): # -> dict[str, str | int] | None:
        """Get Authentication parameters
        """
        ...
    


